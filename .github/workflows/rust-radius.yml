name: RustRadius

###
# cargo-make - Rust compatibility matrix
# 0.20.0 works for 1.46.0 up to 1.55.0
# 0.30.0 works for 1.52 and above
# 0.35.0 works for nightly
###

on:
  push:
    branches: [ master, development, feature/* ]
  pull_request:
    branches: [ master ]


env:
  CARGO_TERM_COLOR: always
  CLICOLOR_FORCE: 1
  CI: true


jobs:
  modern_ci_test_w_cargo_make:
    name:     Modern w cargo-make Rust CI testing
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [1.66.1, 1.67.1, 1.68.2, 1.69.0,
               1.70.0, 1.71.0, 1.71.1, 1.72.0, 1.72.1, 1.73.0, 1.74.0, 1.74.1, 1.75.0, 1.76.0, 1.77.0, 1.77.1, 1.77.2, 1.78.0, 1.79.0,
               1.80.0, 1.80.1, 1.81.0
              ]
        os:   [ubuntu-20.04]
    steps:

    - name: MODERN -- Checkout
      uses: actions/checkout@v3

    - name: MODERN -- Install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: MODERN -- Install cargo-make
      uses: actions-rs/cargo@v1
      with:
        command: install
        args:    --debug cargo-make --version 0.22.2
        
    - name: MODERN -- Build
      run: cargo build --verbose

    - name: MODERN -- Start simple RADIUS server
      run: cargo run --example sync_radius_server &

    - name: MODERN -- Run tests
      run: cargo test --verbose

    - name: MODERN -- Run CI
      uses: actions-rs/cargo@v1
      with:
        command: make
        args:    ci-flow

  nightly_ci_test:
    name:     Nightly Rust CI testing
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:   [ubuntu-20.04]
    steps:

    - name: Nightly Rust -- Checkout
      uses: actions/checkout@v3

    - name: Nightly Rust -- Install rust
      uses: dtolnay/rust-toolchain@nightly
    #  with:
    #    components: cargo-make, cargo-tarpaulin
        
    - name: Nightly Rust -- Install cargo-make
      uses: actions-rs/cargo@v1
      with:
        command: install
        args:    --debug cargo-make

    - name: Nightly Rust -- Install tarpaulin
      uses: actions-rs/cargo@v1
      with:
        command: install
        args:    --debug cargo-tarpaulin

    - name: Nightly Rust -- Build
      run: cargo build --verbose

    - name: Nightly Rust -- Start simple RADIUS server
      run: cargo run --example sync_radius_server &

    - name: Nightly Rust -- Run tests
      run: cargo test --verbose

    - name: Nightly Rust -- Run CI (Allow Failures)
      continue-on-error: true
      uses:              actions-rs/cargo@v1
      with:
        command: make
        args:    ci-flow

    - name: Nightly Rust -- Generate code coverage
      run: |
        cargo tarpaulin --verbose --all-features --ignore-tests --tests --exclude-files benches/* --workspace --timeout 120 --out Json
