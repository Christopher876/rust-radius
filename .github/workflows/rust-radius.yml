name: RustRadius

###
# cargo-make - Rust compatibility matrix
# 0.20.0 works for 1.46.0 up to 1.55.0
# 0.30.0 works for 1.52 and above
# 0.35.0 works for nightly
###

on:
  push:
    branches: [ master, development, feature/* ]
  pull_request:
    branches: [ master ]


env:
  CARGO_TERM_COLOR: always
  CLICOLOR_FORCE: 1
  CI: true


jobs:
  minimum_build_ci_test:
    name:     MSVR for build - CI testing
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [1.42.0]
        os:   [ubuntu-20.04]
    steps:
    - name: MSVR for build -- Checkout
      uses: actions/checkout@v3

    - name: MSVR for build -- Install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: MSVR for build -- Build
      run: cargo build --verbose

  old_rust_ci_test:
    name:     Old Rust CI testing
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [1.43.0, 1.44.0, 1.45.0]
        os:   [ubuntu-20.04]
    steps:

    - name: OLD -- Checkout
      uses: actions/checkout@v3

    - name: OLD -- Install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: OLD -- Build
      run: CARGO_NET_GIT_FETCH_WITH_CLI=true cargo build --verbose

    - name: OLD -- Start simple RADIUS server
      run: cargo run --example sync_radius_server &

    - name: OLD -- Run tests
      run: cargo test --verbose

  new_ci_test:
    name:     New Rust CI testing
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [1.46.0, 1.47.0, 1.48.0, 1.49.0, 1.50.0, 1.51.0]
        os:   [ubuntu-20.04]
    steps:

    - name: NEW -- Checkout
      uses: actions/checkout@v3

    - name: NEW -- Install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: NEW -- Build
      run: cargo build --verbose

    - name: NEW -- Start simple RADIUS server
      run: cargo run --example sync_radius_server &

    - name: NEW -- Run tests
      run: cargo test --verbose

  modern_ci_test:
    name:     Modern w/o cargo-make Rust CI testing
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [1.52.1, 1.53.0, 1.54.0, 1.55.0]
        os:   [ubuntu-20.04]
    steps:

    - name: MODERN -- Checkout
      uses: actions/checkout@v3

    - name: MODERN -- Install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: MODERN -- Build
      run: cargo build --verbose

    - name: MODERN -- Start simple RADIUS server
      run: cargo run --example sync_radius_server &

    - name: MODERN -- Run tests
      run: cargo test --verbose

  modern_ci_test_w_cargo_make:
    name:     Modern w cargo-make Rust CI testing
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [1.56.1, 1.57.0, 1.58.1, 1.59.0, 1.60.0, 1.61.0, 1.62.1, 1.63.0, 1.64.0, 1.65.0, 1.66.1, 1.67.1, 1.68.2, 1.69.0, 1.70.0, 1.71.0, 1.72.0]
        os:   [ubuntu-20.04]
    steps:

    - name: MODERN -- Checkout
      uses: actions/checkout@v3

    - name: MODERN -- Install rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: MODERN -- Install cargo-make
      uses: actions-rs/cargo@v1
      with:
        command: install
        args:    --debug cargo-make --version 0.30.0
        
    - name: MODERN -- Build
      run: cargo build --verbose

    - name: MODERN -- Start simple RADIUS server
      run: cargo run --example sync_radius_server &

    - name: MODERN -- Run tests
      run: cargo test --verbose

    - name: MODERN -- Run CI
      uses: actions-rs/cargo@v1
      with:
        command: make
        args:    ci-flow

  nightly_ci_test:
    name:     Nightly Rust CI testing
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:   [ubuntu-20.04]
    steps:

    - name: Nightly Rust -- Checkout
      uses: actions/checkout@v3

    - name: Nightly Rust -- Install rust
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: cargo-make, cargo-tarpaulin
        
    #- name: Nightly Rust -- Install cargo-make
    #  uses: actions-rs/cargo@v1
    #  with:
    #    command: install
    #    args:    --debug cargo-make --version 0.35.0

    #- name: Nightly Rust -- Install tarpaulin
    #  uses: actions-rs/cargo@v1
    #  with:
    #    command: install
    #    args:    --debug cargo-tarpaulin

    - name: Nightly Rust -- Build
      run: cargo build -Z minimal-versions --verbose

    - name: Nightly Rust -- Start simple RADIUS server
      run: cargo run --example sync_radius_server &

    - name: Nightly Rust -- Run tests
      run: cargo test --verbose

    - name: Nightly Rust -- Run CI (Allow Failures)
      continue-on-error: true
      uses:              actions-rs/cargo@v1
      with:
        command: make
        args:    ci-flow

    - name: Nightly Rust -- Generate code coverage
      run: |
        cargo tarpaulin --verbose --all-features --ignore-tests --tests --exclude-files benches/* --workspace --timeout 120 --out Json
